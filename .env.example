# RivalSearch Agent Environment Configuration
# ===========================================
# 
# This file contains all the environment variables needed to configure
# the RivalSearch Agent. Copy this file to .env and fill in your values.
#
# IMPORTANT: Never commit your actual .env file to version control!
# This file contains sensitive information like API keys.

# =============================================================================
# LLM PROVIDER CONFIGURATION
# =============================================================================
# Choose ONE provider and set its API key. The agent will use the first
# available provider in this order: Grok, OpenAI, Anthropic, Google, DeepSeek, Ollama

# Grok API (Recommended - Fast and powerful)
# Get your API key from: https://console.groq.com/
GROK_API_KEY=your_grok_api_key

# OpenAI API
# Get your API key from: https://platform.openai.com/api-keys
OPENAI_API_KEY=your_openai_api_key

# Anthropic Claude API
# Get your API key from: https://console.anthropic.com/
ANTHROPIC_API_KEY=your_anthropic_api_key

# Google AI API (Choose one of the following)
# Option 1: Generative Language API (simpler)
# Get your API key from: https://makersuite.google.com/app/apikey
GOOGLE_API_KEY=your_google_api_key

# Option 2: Vertex AI (more features, requires Google Cloud setup)
# Set to true to use Vertex AI instead of Generative Language API
GOOGLE_VERTEX_AI=false
# Your Google Cloud project ID
GOOGLE_CLOUD_PROJECT=your_project_id_here
# Your Google Cloud location (e.g., us-central1, europe-west1)
GOOGLE_CLOUD_LOCATION=us-central1

# DeepSeek API
# Get your API key from: https://platform.deepseek.com/
DEEPSEEK_API_KEY=your_deepseek_api_key

# Ollama (Local LLM - no API key needed)
# Base URL for your Ollama server (default: http://localhost:11434)
OLLAMA_BASE_URL=http://localhost:11434

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================
# PostgreSQL database URL for RAG functionality and conversation memory
# Format: postgresql://username:password@host:port/database_name
# 
# Example for local PostgreSQL:
# DATABASE_URL=postgresql://postgres:password@localhost:5432/rivalsearch_db
#
# Example for cloud database (e.g., Supabase, Railway, etc.):
# DATABASE_URL=postgresql://username:password@host:port/database_name
DATABASE_URL=postgresql://username:password@localhost:5432/rivalsearch_db

# =============================================================================
# RAG (RETRIEVAL-AUGMENTED GENERATION) CONFIGURATION
# =============================================================================
# Enable or disable RAG functionality
# Set to true to enable document processing and retrieval
RAG_ENABLED=true

# Embedding model for document processing
# BAAI/bge-small-en-v1.5 is free, local, and high-quality
# Alternative: text-embedding-3-small (OpenAI, requires API key)
EMBEDDING_MODEL=BAAI/bge-small-en-v1.5

# =============================================================================
# AGENT CONFIGURATION
# =============================================================================
# The LLM model to use for the agent
# Format: provider:model-name
# 
# Examples:
# - grok:groq-llama3-70b-8192 (Grok - recommended)
# - openai:gpt-4o (OpenAI)
# - anthropic:claude-3-5-sonnet-latest (Anthropic)
# - google:gemini-1.5-flash (Google)
# - deepseek:deepseek-chat (DeepSeek)
# - ollama:llama3.2 (Ollama)
RIVAL_SEARCH_MODEL_NAME=grok:groq-llama3-70b-8192

# Path to the MCP server for web research capabilities
# This should point to the RivalSearchMCP server.py file
RIVAL_SEARCH_MCP_SERVER_PATH=src/RivalSearchMCP/src/server.py

# =============================================================================
# SERVER CONFIGURATION
# =============================================================================
# Port for the API server (default: 8000)
STANDARD_PORT=8000

# =============================================================================
# LOGGING CONFIGURATION
# =============================================================================
# Log level for debugging (DEBUG, INFO, WARNING, ERROR)
# Set to DEBUG for detailed logs during development
LOG_LEVEL=INFO

# =============================================================================
# ADVANCED CONFIGURATION
# =============================================================================
# Custom agent instructions (optional)
# You can override the default agent behavior with custom instructions
# AGENT_INSTRUCTIONS="Your custom instructions here"

# Session timeout in seconds (default: 3600 = 1 hour)
# How long to keep conversation sessions in memory
SESSION_TIMEOUT=3600

# Maximum document size in bytes (default: 10MB)
# Larger documents will be rejected
MAX_DOCUMENT_SIZE=10485760

# =============================================================================
# SECURITY NOTES
# =============================================================================
# 1. Never commit your .env file to version control
# 2. Keep your API keys secure and rotate them regularly
# 3. Use environment-specific .env files for different deployments
# 4. Consider using a secrets manager for production deployments
